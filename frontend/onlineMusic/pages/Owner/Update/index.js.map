{"version":3,"file":"pages/Owner/Update/index.js","sources":["webpack:///._src_pages_Owner_Update_index.tsx","webpack:///._src_pages_Owner_Update_index.sass","webpack:///./src/pages/Owner/Update/index.tsx?4c51"],"sourcesContent":["import {FC, ReactNode, useEffect, useState} from \"react\";\r\nimport {View, Text, Button} from \"@tarojs/components\";\r\nimport Taro from '@tarojs/taro'\r\nimport {\r\n  AtActionSheet,\r\n  AtActionSheetItem,\r\n  AtAvatar,\r\n  AtIcon, AtInput,\r\n  AtModal,\r\n  AtModalAction,\r\n  AtModalContent,\r\n  AtModalHeader\r\n} from \"taro-ui\";\r\nimport NavigationBar from \"../../../components/NavigationBar\";\r\nimport './index.sass'\r\nimport {updateUser} from \"../../../RouteInfo\";\r\n\r\ntype ListType={\r\n  name:string,\r\n  value:ReactNode,\r\n  clickEvent?:()=>void\r\n}\r\ntype userInfoType = {\r\n  Uid:string,\r\n  avater_url:string,\r\n  uname:string,\r\n  sex:number\r\n}\r\nconst UpdateComponent: FC = () => {\r\n  const [UserInfo, setUserInfo] = useState<userInfoType>({Uid:'',avater_url:require('../../../accept/images/p1.jpg'),uname:'无心同学',sex:1});\r\n  const [ActionSheetOpen, setActionSheetOpen] = useState(false);\r\n  const [ModalOpen, setModalOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n\r\n  const update =async (user: { Uid:string,Uname?:string,sex?:number,avater_url?:string })=>{\r\n    try{\r\n      const data = await updateUser(user);\r\n      console.log(data)\r\n      if(data>0) Taro.showToast({\r\n        title:'操作成功',\r\n        icon:'none'\r\n      })\r\n      else Taro.showToast({\r\n        title:'操作失败',\r\n        icon:'none'\r\n      })\r\n    }catch (e){Taro.atMessage({'message':e,'type':'error'})}\r\n  }\r\n\r\n  const changeAvater = ()=>{\r\n    const user = Taro.getStorageSync('userInfo')\r\n    Taro.chooseMessageFile({\r\n      count:1,\r\n      type:'image',\r\n      success:res=>{\r\n        setUserInfo(a=>({...a,avater_url:res.tempFiles[0].path}))\r\n        // 再把资源上传到服务器\r\n        Taro.uploadFile({\r\n          url:'http://localhost:8888/OnlineMusic/User/fileUpload',\r\n          filePath:res.tempFiles[0].path,\r\n          name: 'file',\r\n          formData:{Uid:user.uid,fileName:res.tempFiles[0].name},\r\n          success: (resp)=>{\r\n            const data = JSON.parse(resp.data)\r\n            Taro.showToast({\r\n              title:data.mes,\r\n              icon:'none'\r\n            })\r\n            if(data.code==200){\r\n              setUserInfo(value=>({...value,avater_url:data.path}))\r\n              Taro.setStorage({\r\n                key:'userInfo',\r\n                data:{...user,avater_url:data.path}\r\n              })}}})}})}\r\n\r\n  const ListData:ListType[] = [\r\n    {name:'头像',value:<AtAvatar className='avater' image={UserInfo.avater_url} />,clickEvent:changeAvater},\r\n    {name:'昵称',value:UserInfo.uname,clickEvent:()=>{\r\n        setName(UserInfo.uname)\r\n        setModalOpen(true)\r\n      }},\r\n    {name:'性别',value:UserInfo.sex===0?'女':'男',clickEvent:()=>setActionSheetOpen(true)}\r\n  ]\r\n  const changeSex = (sex:number)=>{\r\n    setActionSheetOpen(false)\r\n    setUserInfo({...UserInfo,sex})\r\n    Taro.showToast({title:'操作成功',icon:'success'})\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const user = Taro.getStorageSync('userInfo')\r\n    user && setUserInfo({\r\n      Uid:user.uid,\r\n      avater_url:user.avater_url,\r\n      uname:user.uname,\r\n      sex:user.sex\r\n    })\r\n  },[])\r\n  return (\r\n    <View className='update_box'>\r\n      <NavigationBar backIcon BarText='个人资料' BackgroundColor='white' fontColor='black' />\r\n      <View className='List_box'>\r\n        {\r\n          ListData.map(item=>(\r\n            <View className='ListItem' onClick={item.clickEvent}>\r\n              <Text>{item.name}</Text>\r\n              <View>\r\n                {item.value}\r\n                <AtIcon className='icon' value='chevron-right' size={28} />\r\n              </View>\r\n            </View>\r\n          ))\r\n        }\r\n      </View>\r\n      <AtModal isOpened={ModalOpen} onClose={()=>setModalOpen(false)}>\r\n        <AtModalHeader>修改昵称</AtModalHeader>\r\n        <AtModalContent>\r\n          <AtInput\r\n            name='name'\r\n            value={name}\r\n            onChange={a=>setName(a as string)}\r\n            title='昵称'\r\n            type='text'\r\n            placeholder='请输入您的昵称'\r\n          />\r\n        </AtModalContent>\r\n        <AtModalAction>\r\n          <Button onClick={()=>setModalOpen(false)}>取消</Button>\r\n          <Button onClick={()=>{\r\n            setModalOpen(false)\r\n            setUserInfo(value=>({...value,uname:name}))\r\n            update({Uid:UserInfo.Uid,Uname:name})\r\n            Taro.setStorage({\r\n              key:'userInfo',\r\n              data:{...Taro.getStorageSync('userInfo'),uname:name}\r\n          })}}\r\n          >确定</Button>\r\n        </AtModalAction>\r\n      </AtModal>\r\n      <AtActionSheet\r\n        isOpened={ActionSheetOpen}\r\n        cancelText='取消'\r\n        onClose={()=>setActionSheetOpen(false)}\r\n        onCancel={()=>setActionSheetOpen(false)}\r\n      >\r\n        <AtActionSheetItem onClick={()=>{\r\n          changeSex(1)\r\n          update({Uid:UserInfo.Uid,sex:1})\r\n          Taro.setStorage({\r\n            key:'userInfo',\r\n            data:{...Taro.getStorageSync('userInfo'),sex:1}\r\n          })\r\n        }}\r\n        >\r\n          男\r\n        </AtActionSheetItem>\r\n        <AtActionSheetItem onClick={()=>{\r\n          changeSex(0)\r\n          update({Uid:UserInfo.Uid,sex:0})\r\n          Taro.setStorage({\r\n            key:'userInfo',\r\n            data:{...Taro.getStorageSync('userInfo'),sex:0}\r\n          })\r\n        }}\r\n        >\r\n          女\r\n        </AtActionSheetItem>\r\n      </AtActionSheet>\r\n    </View>\r\n  )\r\n}\r\nexport default UpdateComponent\r\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationBarTextStyle\":\"black\",\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/Owner/Update/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAFA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AAhBA;AAgBA;AAtBA;AAFA;AACA;AAyBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAFA;AAFA;AADA;AAFA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAHA;AAIA;AACA;AACA;AANA;AADA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAJA;AAAA;AAAA;AAFA;AAZA;AA0BA;AACA;AACA;AAAA;AAHA;AAIA;AAAA;AAJA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AAjBA;AAxCA;AAvEA;AACA;AA8IA;;;;;;;;;;;AC3KA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}