{"version":3,"file":"pages/Admin/index.js","sources":["webpack:///._src_pages_Admin_index.tsx","webpack:///._src_pages_Admin_index.sass","webpack:///./src/pages/Admin/index.tsx?478f"],"sourcesContent":["import {FC, useEffect, useState} from \"react\";\r\nimport {Image, Swiper, SwiperItem, View, Text, ScrollView} from \"@tarojs/components\";\r\nimport {AtDivider, AtIcon, AtMessage} from \"taro-ui\";\r\nimport Taro from '@tarojs/taro'\r\nimport NavigationBar from \"../../components/NavigationBar\";\r\nimport './index.sass'\r\nimport {findAllBanner, findAllRecommendSong, findAllBang, findMusicByBangidList} from \"../../RouteInfo\";\r\n\r\ntype BannerType = {\r\n  id:number,\r\n  url:string\r\n}\r\ntype RecommendType = {\r\n  rid:string,\r\n  name:string,\r\n  img_url:string\r\n}\r\ntype BangType = {\r\n  id:string,\r\n  name:string,\r\n  img_url:string\r\n}\r\nexport type Music = {\r\n  mid:string,\r\n  name:string,\r\n  artist:string,\r\n  img_url:string,\r\n  audio_url:string,\r\n  songTimeMinutes:string,\r\n}\r\ntype Bang_Music = {\r\n  Bang:BangType,\r\n  MusicList:Music[]\r\n}\r\nconst Admin: FC = () => {\r\n\r\n  const IconItemList:{name:string,desc:string}[] = [\r\n    {name:'icon-meirituijian-',desc:'今日推荐'},\r\n    {name:'icon-diantai',desc:'电台'},\r\n    {name:'icon-gedan',desc:'歌单'},\r\n    {name:'icon-paihangbanggequ',desc:'排行榜'},\r\n  ]\r\n  const [BannerList,setBannerList] = useState<BannerType[]>();\r\n  const [RecommendSongList, setRecommendSongList] = useState<RecommendType[]>();\r\n  const [_, setBang] = useState<BangType[]>();\r\n  const [BangMusicList, setBangMusicList] = useState<Bang_Music[]>();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const getAllBang = async ()=>{\r\n    try{\r\n      const data:BangType[] = await findAllBang()\r\n      setBang(data)\r\n      const BangidList = data.map(item=> item.id).toString()\r\n      const MusicList = await findMusicByBangidList({BangidList})\r\n      setBangMusicList(MusicList)\r\n    }catch (e) {Taro.atMessage({'message':e,'type':'error'}) }\r\n  }\r\n\r\n  // 获取到所有的推荐歌单\r\n  const getAllRecommendSong =async ()=>{\r\n    try{\r\n      const data = await findAllRecommendSong()\r\n      setRecommendSongList(data)\r\n    }catch (e) {Taro.atMessage({'message':e,'type':'error'}) }\r\n  }\r\n\r\n  // 获取到所有的banner图片url\r\n  const getAllBanner = async ()=>{\r\n    try{\r\n      const data = await findAllBanner()\r\n      setBannerList(data)\r\n    }catch (e) { Taro.atMessage({'message':e,'type':'error'}) }\r\n\r\n  }\r\n\r\n  const PlaySong = (musicInfo:Music)=>{\r\n    const app = Taro.getApp()\r\n    app.musicInfo = musicInfo\r\n    Taro.switchTab({url:`/pages/SongDetail/index`})\r\n  }\r\n\r\n  const onSearch = ()=>{\r\n    if(searchValue==='') Taro.showToast({title:'请输入内容'})\r\n    else Taro.navigateTo({url:`/pages/MusicList/index?name=${searchValue}&type=searchMusic`})\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // 获取到所有的banner图片url\r\n    getAllBanner()\r\n    // 获取到所有的推荐歌单\r\n    getAllRecommendSong()\r\n    // 获取排行榜的信息\r\n    getAllBang()\r\n\r\n  },[])\r\n  return (\r\n    <View className='admin_box'>\r\n      <View><AtMessage /></View>\r\n      <NavigationBar\r\n        searchBar\r\n        icon={{value:'menu',onIconClick:()=>{}}}\r\n        onActionClick={onSearch}\r\n        onSearchChange={(value)=>setSearchValue(value)}\r\n        searchValue={searchValue}\r\n      />\r\n      {/*轮播图区*/}\r\n      <View className='Swiper-view'>\r\n        <Swiper\r\n          className='myswiper'\r\n          indicatorColor='#999'\r\n          indicatorActiveColor='#333'\r\n          circular\r\n          indicatorDots\r\n          autoplay\r\n        >\r\n          {BannerList?.map(item=>(\r\n            <SwiperItem key={item.id}>\r\n              <Image src={item.url} />\r\n            </SwiperItem>\r\n          ))}\r\n        </Swiper>\r\n      </View>\r\n      {/*图标区域*/}\r\n      <View className='Icon_box'>\r\n        {\r\n          IconItemList.map(item=>(\r\n            <View className='IconItem' key={item.name}>\r\n              <View className='box'>\r\n                <View className={`iconfont ${item.name} icon`} />\r\n              </View>\r\n              <View className='desc'>{item.desc}</View>\r\n            </View>\r\n          ))\r\n        }\r\n      </View>\r\n      <AtDivider lineColor='#e8e8e8' customStyle={{height:5,marginBottom:'5rpx'}} />\r\n      {/*推荐歌曲*/}\r\n      <View className='recommend_box'>\r\n        <View className='top_title' onClick={()=>Taro.navigateTo({url:'/pages/MoreSongSheet/index'})}>\r\n          <Text>推荐歌单</Text>\r\n          <View>更多<AtIcon value='chevron-right' size={14} /></View>\r\n        </View>\r\n        <ScrollView\r\n          className='scrollview'\r\n          enableFlex\r\n          scrollX={true as boolean}\r\n          scrollWithAnimation\r\n        >\r\n          {\r\n            RecommendSongList && RecommendSongList.slice(0,7).map(item=>(\r\n              <View\r\n                className='scrollItem'\r\n                key={item.rid}\r\n                onClick={()=>Taro.navigateTo({url:`/pages/RecommendDetail/index?rid=${item.rid}&recommend=${JSON.stringify(item)}`})}\r\n              >\r\n                <Image src={item.img_url} mode='scaleToFill' />\r\n                <View>{item.name}</View>\r\n              </View>\r\n            ))\r\n          }\r\n        </ScrollView>\r\n      </View>\r\n      <AtDivider lineColor='#e8e8e8' customStyle={{height:5,marginBottom:'5rpx'}} />\r\n      {/*排行榜*/}\r\n      <View className='chart'>\r\n        <View className='top_title'>\r\n          <Text>音乐排行榜</Text>\r\n          <View>更多<AtIcon value='chevron-right' size={14} /></View>\r\n        </View>\r\n        <Swiper\r\n          className='topListSwiper'\r\n        >\r\n          {\r\n            BangMusicList?.map(item=>(\r\n              <SwiperItem className='topListItem' key={item.Bang.id}>\r\n                <View className='topListItemView' style={{backgroundColor:'#e1ece8'}}>\r\n                  <View className='topListItem_left'>\r\n                    <Text style={{color:'#e42d72'}}>{item.Bang.name}</Text>\r\n                    {\r\n                      item.MusicList?(\r\n                        <View className='img_box'>\r\n                          <View className='q'><Image src={item.MusicList[0].img_url} /></View>\r\n                          <View className='w'><Image src={item.MusicList[1].img_url} /></View>\r\n                          <View className='e'><Image src={item.MusicList[2].img_url} /></View>\r\n                        </View>\r\n                      ):''\r\n                    }\r\n                  </View>\r\n                  <View className='topListItem_right'>\r\n                    {\r\n                      item.MusicList.slice(0,3).map(item2=>(\r\n                        <View className='rightItem' key={item2.mid} onClick={()=>PlaySong(item2)}>\r\n                          <Text>1.{item2.name}&nbsp;</Text>\r\n                          <Text>- {item2.artist}</Text>\r\n                          <View className='iconfont icon icon-yunhang' />\r\n                        </View>\r\n                      ))\r\n                    }\r\n                  </View>\r\n                </View>\r\n              </SwiperItem>\r\n            ))\r\n          }\r\n\r\n        </Swiper>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\nexport default Admin\r\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/Admin/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA4BA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAKA;AAAA;AACA;AANA;AAKA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAdA;AACA;AACA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAzBA;AACA;AACA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAJA;AAKA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AADA;AADA;AARA;AADA;AAiBA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AAJA;AADA;AAFA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AAEA;AAEA;AAAA;AAAA;AAAA;AAHA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AANA;AADA;AAPA;AALA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AADA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAJA;AAYA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AADA;AAFA;AAbA;AADA;AADA;AAJA;AALA;AApEA;AA9DA;AACA;AA8KA;;;;;;;;;;;ACjNA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}