{"version":3,"file":"pages/SongDetail/index.js","sources":["webpack:///._src_pages_SongDetail_index.tsx","webpack:///._src_accept_song_disc.png","webpack:///._src_accept_song_needle.png","webpack:///._src_pages_SongDetail_index.sass","webpack:///./src/pages/SongDetail/index.tsx?27db"],"sourcesContent":["import {FC, useEffect, useRef, useState} from 'react';\r\nimport {View,Image,Text,Slider} from '@tarojs/components';\r\nimport Taro from '@tarojs/taro'\r\nimport {AtIcon, AtMessage} from \"taro-ui\";\r\nimport './index.sass'\r\nimport NavigationBar from \"../../components/NavigationBar\";\r\nimport {Music} from '../Admin'\r\nimport InnerAudioContext = Taro.InnerAudioContext;\r\nimport useDidShow = Taro.useDidShow;\r\nimport {findNumByUidAndMid, insertLoveMusic, removeLoveMusic} from \"../../RouteInfo\";\r\n\r\ntype audioType = {\r\n  duration:number,\r\n  currentTime:number,\r\n  sliderValue:number\r\n}\r\nlet i = 1\r\nconst Index: FC = () => {\r\n  const disc = useRef<any>();\r\n  const [musicInfo, setMusicInfo] = useState<Music>();\r\n  const [IsPlay, setIsPlay] = useState(false);\r\n  const [like, setLike] = useState(false);\r\n  // 播放长度\r\n  const [AudioObj, setAudioObj] = useState<audioType>({sliderValue:0,duration:0,currentTime:0});\r\n  // 进度条的定时器\r\n  const [Timer1, setTimer1] = useState<any>();\r\n  // 转盘的定时器\r\n  const [Timer2, setTimer2] = useState<any>();\r\n  // 转盘转动的角度\r\n  const [_, setRotateSize] = useState(0);\r\n  const [AudioContext, setAudioContext] = useState<InnerAudioContext>();\r\n\r\n  const LoveMusic =async (mid:string)=>{\r\n    const user = Taro.getStorageSync('userInfo')\r\n      if(user){\r\n        if(like===true){\r\n          // 取消收藏\r\n          try{\r\n            const data =await removeLoveMusic({mid:mid,uid:user.uid})\r\n            if(data===1) Taro.showToast({\r\n              title:'取消成功',\r\n              icon: 'none',\r\n              duration: 2000})\r\n            else Taro.showToast({\r\n              title:'取消失败',\r\n              icon: 'none',\r\n              duration: 2000})\r\n          }catch (e) { Taro.atMessage({'message':e,'type':'error'}) }\r\n        }else {\r\n          try{\r\n            const data =await insertLoveMusic({mid:mid,uid:user.uid})\r\n            if(data===1) Taro.showToast({\r\n              title:'收藏成功',\r\n              icon: 'none',\r\n              duration: 2000})\r\n            else Taro.showToast({\r\n              title:'收藏失败',\r\n              icon: 'none',\r\n              duration: 2000})\r\n          }catch (e) { Taro.atMessage({'message':e,'type':'error'}) }\r\n        }\r\n        setLike(!like)\r\n      }else{\r\n        Taro.showToast({\r\n          title:'请先登录',\r\n          icon: 'none',\r\n          duration: 2000})\r\n      }\r\n    }\r\n\r\n  // 将数字转换成时间格式\r\n  const changeNumType = (time:string)=>{\r\n    time = time === '0' ? '00.00' : time\r\n    const index = time.indexOf('.')\r\n    const a = time.substr(0,index)\r\n    const b = time.substr(index+1,2)\r\n    const list = [a.length===1?`0${a}`:a,b.length===1?`0${b}`:b]\r\n    return list.join(':')\r\n  }\r\n\r\n  // 开始转动转盘\r\n  const onRun = ()=>{\r\n    const a = setInterval(()=>{\r\n      setRotateSize(value=>{\r\n        disc.current.style.transform = `rotate(${value+36}deg)`\r\n        return 36*i\r\n      })\r\n      i++\r\n    },1000)\r\n    setTimer2(a)\r\n  }\r\n\r\n  // 暂停播放和进度条\r\n  const onparse = ()=> {\r\n    clearInterval(Timer1)\r\n    clearInterval(Timer2)\r\n    // 暂停播放\r\n    AudioContext?.pause()\r\n  }\r\n\r\n  //  开始播放和进度条\r\n  const onplay = ()=>{\r\n    // 播放音频\r\n    AudioContext?.play()\r\n    // 转动转盘\r\n    onRun()\r\n    // 开启定时器，每秒+0.01\r\n    const a = setInterval(\r\n      ()=> setAudioObj(value=>{\r\n        const cTime = value.currentTime\r\n        const dTime = value.duration\r\n        return {...value,sliderValue:cTime===dTime?dTime:cTime+1, currentTime:cTime===dTime?dTime:cTime+1}\r\n      })\r\n      ,1000)\r\n    setTimer1(a)\r\n  }\r\n\r\n  // 防止 定时器获取到underfined 每次变化都重置onEnded方法\r\n  useEffect(() => {\r\n    AudioContext?.onEnded(()=>{\r\n      // 清除定时器 暂停播放 重置旋转角度和i 重置进度条\r\n      onparse()\r\n      setIsPlay(false)\r\n      setRotateSize(0)\r\n      i=1\r\n      disc.current.style.transform = 'rotate(0deg)'\r\n      const time = Math.floor(AudioContext?.duration)\r\n      setAudioObj({currentTime:0,duration:time,sliderValue:0})\r\n    })\r\n  },[Timer1,Timer2]);\r\n\r\n  // 点击 暂停 开始 的方法\r\n  const handle = ()=>{\r\n    //点击暂停按钮时，开始播放\r\n    if(!IsPlay) onplay()\r\n    // 暂停播放，以及清除定时器\r\n    else onparse()\r\n    setIsPlay(!IsPlay)\r\n  }\r\n\r\n  const registerAudio = (musicInfo:Music)=>{\r\n    setMusicInfo(musicInfo)\r\n    const audio = Taro.createInnerAudioContext()\r\n    audio.src=musicInfo.audio_url\r\n    // 注册音频\r\n    audio.onCanplay(()=>{\r\n      // 必须先调用一次 后续才能获取到 否则一直都是0\r\n      audio.duration\r\n      setTimeout(()=>{\r\n        const time = Math.floor(audio.duration)\r\n        setAudioObj(a=>({...a,duration:time}))\r\n      },100)\r\n    })\r\n    audio.onPlay(()=>  console.log('开始播放') )\r\n    audio.onError(res => Taro.atMessage({'message':res.errMsg,'type':'error'}))\r\n    setAudioContext(audio)\r\n  }\r\n\r\n  const AddToRecentPlay = (music:Music)=>{\r\n    if(music.mid){\r\n      const recentPlay:Music[] = Taro.getStorageSync('recentPlay')\r\n      if(recentPlay){\r\n        const index = recentPlay.findIndex(item=>item.mid===music.mid)\r\n        if(index===-1){\r\n          // 说明此时的 最近播放 没有该歌曲的记录，那么就添加\r\n          Taro.setStorage({\r\n            key:'recentPlay',\r\n            data:[music,...recentPlay]\r\n          })\r\n        }else if(index>-1){\r\n          // 说明此时的 最近播放 已经存放了该歌曲的记录，那么就把他先删除，再提前\r\n          recentPlay.splice(index,1)\r\n          Taro.setStorage({\r\n            key:'recentPlay',\r\n            data:[music,...recentPlay]\r\n          })\r\n        }\r\n      }else Taro.setStorage({key:'recentPlay',data:[music] })     // 如果最近播放无记录，那么久直接添加\r\n    }\r\n  }\r\n\r\n  // 每次展示到前台的时候触发\r\n  useDidShow(() => {\r\n    const app = Taro.getApp()\r\n    const a = app.musicInfo\r\n    if(!musicInfo){\r\n      // 添加到最近播放\r\n      AddToRecentPlay(a)\r\n      registerAudio(a)\r\n    }else{\r\n      // 如果展示到前台的时候，App中的musicInfo与组件中的不一样，那就重新注册，以App中的数据为主\r\n      if(a.mid!==musicInfo.mid) {\r\n        // 添加到最近播放\r\n        AddToRecentPlay(a)\r\n        AudioContext?.destroy()\r\n        onparse()\r\n        setAudioObj({sliderValue:0,duration:0,currentTime:0})\r\n        setIsPlay(false)\r\n        setRotateSize(0)\r\n        i=1\r\n        disc.current.style.transform = 'rotate(0deg)'\r\n        registerAudio(a)\r\n      }\r\n    }\r\n  })\r\n\r\n  const checkIsLove =async (mid:string,uid:string)=>{\r\n    try {\r\n      const data = await findNumByUidAndMid({mid,uid})\r\n      data>0 && setLike(true)\r\n      console.log(data)\r\n    }catch (e){Taro.atMessage({'message':e,'type':'error'})}\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(musicInfo?.mid){\r\n      setLike(false)\r\n      checkIsLove(musicInfo.mid,Taro.getStorageSync('userInfo').uid)\r\n      onplay()\r\n      setIsPlay(true)\r\n    }\r\n  }, [AudioContext]);\r\n\r\n  return (\r\n    <View className='songDetailContainer'>\r\n      <NavigationBar BarText={musicInfo?.name?musicInfo.name:'无心歌单'} fontsize='35rpx' />\r\n      <View><AtMessage /></View>\r\n      <View className='author'>{musicInfo?musicInfo.artist:'无名氏'}</View>\r\n      <View className='bottoncircle'></View>\r\n      <Image className={`needle ${IsPlay?'needlerotate':''}`} src={require('../../accept/song/needle.png')} />\r\n      <View ref={disc} className={`circle ${IsPlay?'circleRotate':''}`}>\r\n        <Image className='disc' src={require('../../accept/song/disc.png')} />\r\n        <Image className='musicImg' src={musicInfo?musicInfo.img_url:require('../../accept/images/p1.jpg')} />\r\n      </View>\r\n\r\n      <View className='bottom'>\r\n        <View className='a'>\r\n          <AtIcon\r\n            className='topicon'\r\n            value={`${like?'star-2':'star'}`}\r\n            size='30'\r\n            color='white'\r\n            onClick={()=>LoveMusic(musicInfo?.mid as string)}\r\n          />\r\n          <AtIcon className='topicon' value='download' size='30' color='white' />\r\n          <AtIcon className='topicon' value='message' size='30' color='white' />\r\n          <AtIcon className='topicon' value='link' size='30' color='white' />\r\n          <AtIcon className='topicon' value='menu' size='30' color='white' />\r\n        </View>\r\n        <View className='b'>\r\n          <Slider\r\n            min={0}\r\n            max={AudioObj.duration}\r\n            step={1}\r\n            blockSize={10}\r\n            value={AudioObj.sliderValue}\r\n            activeColor='white'\r\n            backgroundColor='#bfbfbf'\r\n            onChange={value=>{\r\n              if(AudioContext){\r\n                const a = value.detail.value\r\n                AudioContext.seek(a)\r\n                setAudioObj(ad=>({...ad,currentTime:value.detail.value,sliderValue:value.detail.value }))\r\n              }\r\n            }}\r\n          />\r\n          <View className='startEnd'>\r\n            <Text>{changeNumType(`${Math.floor(AudioObj.currentTime/60)}.${AudioObj.currentTime%60}`)}</Text>\r\n            <Text>{changeNumType(`${Math.floor(AudioObj.duration/60)}.${AudioObj.duration%60}`)}</Text>\r\n          </View>\r\n        </View>\r\n        {/*控制按钮*/}\r\n        <View className='c'>\r\n          <View className='kuai'>\r\n            <View className='iconfont icon-kuaijin1 icon' onClick={()=> {\r\n              AudioContext && AudioContext.seek(AudioObj.currentTime-15)\r\n              setAudioObj(value=>({...value,currentTime:value.currentTime-15,sliderValue:value.sliderValue-15}))\r\n            }} />\r\n            <Text>快退</Text>\r\n          </View>\r\n          <View\r\n            className={`iconfont ${IsPlay?'icon-zanting ':'icon-yunhang'} icon`}\r\n            style={{fontSize:'140rpx',padding:'0 30rpx',position:'relative',top:'-12rpx'}}\r\n            onClick={handle}\r\n          />\r\n          <View className='kuai'>\r\n            <View className='iconfont icon-kuaijin icon' onClick={()=> {\r\n              AudioContext && AudioContext.seek(AudioObj.currentTime+15)\r\n              setAudioObj(value=>({...value,currentTime:value.currentTime+15,sliderValue:value.sliderValue+15}))\r\n            }} />\r\n            <Text>快进</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\nexport default Index\r\n","module.exports = __webpack_public_path__ + \"accept/song/disc.png\";","module.exports = __webpack_public_path__ + \"accept/song/needle.png\";","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationStyle\":\"custom\",\"enablePullDownRefresh\":true};\n\n\nvar inst = Page(createPageConfig(component, 'pages/SongDetail/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":"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","sourceRoot":""}