{"version":3,"file":"pages/Register/index.js","sources":["webpack:///._src_pages_Register_index.tsx","webpack:///._src_pages_Register_index.sass","webpack:///./src/pages/Register/index.tsx?9820"],"sourcesContent":["import {FC, useState} from \"react\";\r\nimport {Button, Input, Picker, View} from \"@tarojs/components\";\r\nimport {AtList, AtListItem, AtMessage} from \"taro-ui\";\r\nimport Taro from '@tarojs/taro'\r\nimport NavigationBar from \"../../components/NavigationBar\";\r\nimport './index.sass'\r\nimport {register} from \"../../RouteInfo\";\r\n\r\n\r\ntype a = \"number\" | \"text\" | \"idcard\" | \"digit\" | 'password'\r\ntype formItemType = {\r\n  icon:string,\r\n  placeholder:string,\r\n  type: a,\r\n  name:string\r\n}\r\n\r\nconst Register: FC = () => {\r\n  const FormList:formItemType[] = [\r\n    {icon:'icon-yonghu',placeholder:'用户名',type:'text',name:'name'},\r\n    {icon:'icon-mima',placeholder:'密码',type:'password',name:'password'},\r\n  ]\r\n  const [UserForm, setUserForm] = useState<{name:string,password:string,sex:number}>({name:'',password:'',sex:-1});\r\n\r\n  const onRegister =async ()=>{\r\n    if(UserForm.name==''){\r\n      Taro.showToast({\r\n        title:'请输入名字',\r\n        icon:'none'\r\n      })\r\n    }else if(UserForm.password==''){\r\n      Taro.showToast({\r\n        title:'请输入密码',\r\n        icon:'none'\r\n      })\r\n    }else if(UserForm.sex==-1){\r\n      Taro.showToast({\r\n        title:'请选择性别',\r\n        icon:'none'\r\n      })\r\n    }else{\r\n      try{\r\n        const data = await register({Uname:UserForm.name,Upassword:UserForm.password,sex:UserForm.sex})\r\n        console.log(data)\r\n        if(data=='-1') Taro.atMessage({'message':'注册失败','type':'error'})\r\n        else {\r\n          Taro.showModal({\r\n            confirmText:'确定',\r\n            content:`注册成功!请牢记您的账号为${data}`,\r\n            title:'系统提示',\r\n            success: ()=> Taro.redirectTo({url:`/pages/Login/index?id=${data}`})\r\n          })\r\n        }\r\n      }catch (e){Taro.atMessage({\"message\":e,'type':'error'})}\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View className='Register_box'>\r\n      <NavigationBar BarText='注册页' backIcon />\r\n      <AtMessage />\r\n      <View className='top_logo'>\r\n        <View className='iconfont icon icon-QX-kuwoyinle' />\r\n        <View>无心音乐</View>\r\n      </View>\r\n      <View className='form_box'>\r\n        {\r\n          FormList.map(item=>(\r\n            <View className='form_item'>\r\n              <View className={`iconfont icon2 ${item.icon}`} />\r\n              <Input\r\n                type={item.type as any}\r\n                placeholder={item.placeholder}\r\n                onInput={item2=>setUserForm({...UserForm,[item.name]:item2.detail.value})}\r\n              />\r\n            </View>\r\n          ))\r\n        }\r\n        <View className='form_item'>\r\n          <View className='iconfont icon2 icon-xingbie' />\r\n          <Picker className='picker' mode='selector' range={['女','男']} onChange={value=>setUserForm({...UserForm,sex:Number(value.detail.value)})} >\r\n            <AtList>\r\n              <AtListItem\r\n                customStyle={{color:UserForm.sex==-1?'#b8b8b8':'black'}}\r\n                title={UserForm.sex===-1?'性别':UserForm.sex===0?'女':'男'}\r\n              />\r\n            </AtList>\r\n          </Picker>\r\n        </View>\r\n\r\n        <View className='btn_box'>\r\n          <Button className='register_btn' onClick={onRegister}>注册</Button>\r\n          <Button className='chongzhi' onClick={()=>setUserForm({name:'',password:'',sex:-1})}>重置</Button>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\nexport default Register\r\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/Register/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAFA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AAFA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AACA;AAnBA;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AA5BA;AAAA;AACA;AADA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAgCA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AAIA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAFA;AAHA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAFA;AADA;AADA;AAFA;AAYA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAzBA;AAPA;AAzCA;AACA;AAgFA;;;;;;;;;;;AClGA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}