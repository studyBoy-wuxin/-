{"version":3,"file":"pages/Login/index.js","sources":["webpack:///._src_pages_Login_index.tsx","webpack:///._src_pages_Login_index.sass","webpack:///./src/pages/Login/index.tsx?135e"],"sourcesContent":["import {FC, useState} from \"react\";\r\nimport {Button, Text, View} from \"@tarojs/components\";\r\nimport {AtInput, AtMessage} from 'taro-ui'\r\nimport Taro from '@tarojs/taro'\r\nimport NavigationBar from \"../../components/NavigationBar\";\r\nimport {loginRequest} from '../../RouteInfo'\r\nimport './index.sass'\r\nimport useDidShow = Taro.useDidShow;\r\n\r\ntype userInfoType = {\r\n  Uid:string ,\r\n  Upassword:string\r\n}\r\nconst Login: FC = () => {\r\n  const [userInfo, setUserInfo] = useState<userInfoType>({Uid:'',Upassword:''});\r\n\r\n  const login =async ()=>{\r\n    const { Uid, Upassword } = userInfo\r\n    //先验证手机不能为空\r\n    if (Uid == '') {\r\n      Taro.showToast({\r\n        title: '请输入账号',\r\n        icon: 'none'\r\n      })\r\n      return\r\n    }\r\n    //最后验证密码\r\n    if (Upassword == '') {\r\n      Taro.showToast({\r\n        title: '密码不能为空',\r\n        icon: 'none'\r\n      })\r\n      return\r\n    }\r\n\r\n    try{\r\n      const result = await loginRequest({Uid,Upassword})\r\n      if (result.code === 200) {\r\n        Taro.showToast({\r\n          title: result.mes,\r\n          icon: 'success'\r\n        })\r\n        //将用户信息存储到本地的storage中\r\n        await Taro.setStorageSync('userInfo',result.user)\r\n        console.log(Taro.getStorageSync('userInfo'))\r\n        setTimeout(()=>Taro.switchTab({\r\n          url: '/pages/Owner/index',\r\n        }),1500)\r\n      } else if (result.code === 400) {\r\n        Taro.showToast({\r\n          title: result.mes,\r\n          icon: 'none'\r\n        })\r\n      } else if (result.code === 502) {\r\n        Taro.showToast({\r\n          title: result.mes,\r\n          icon: 'none'\r\n        })\r\n      }\r\n    }catch (e) {Taro.atMessage({'message':e,'type':'error'})}\r\n  }\r\n\r\n  useDidShow(()=>{\r\n    const Uid = Taro.getCurrentInstance().router?.params.id\r\n    Uid && setUserInfo({...userInfo,Uid})\r\n  })\r\n\r\n\r\n  return (\r\n    <View className='Login_box'>\r\n      <AtMessage />\r\n      <NavigationBar BarText='登录页' backIcon />\r\n      <View className='wrapper'>\r\n        <View className='left-top-sign'>LOGIN</View>\r\n        <View className='welcome'>\r\n          请先登录!\r\n        </View>\r\n        <View className='input-content'>\r\n          <View className='input-item'>\r\n            <Text className='tit'>账号</Text>\r\n            <AtInput\r\n              className='input'\r\n              type='text'\r\n              name='Uid'\r\n              placeholder='请输入账号'\r\n              onChange={(value)=>setUserInfo(a=>({...a,Uid:value as string}))}\r\n              value={userInfo.Uid as string}\r\n            />\r\n          </View>\r\n          <View className='input-item'>\r\n            <Text className='tit'>密码</Text>\r\n            <AtInput\r\n              className='input'\r\n              type='password'\r\n              name='Upassword'\r\n              placeholder='请输入密码'\r\n              onChange={(value)=>setUserInfo(a=>({...a,Upassword:value as string}))}\r\n              value={userInfo.Upassword as string}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <Button className='confirm-btn' onClick={login}>登录</Button>\r\n        <View className='forget-section'>\r\n          忘记密码?\r\n        </View>\r\n      </View>\r\n      <View className='register-section'>\r\n        还没有账号?\r\n        <Text onClick={()=>Taro.navigateTo({url:'/pages/Register/index'})}>马上注册</Text>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\nexport default Login\r\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.tsx\"\nvar config = {\"navigationStyle\":\"custom\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/Login/index', {root:{cn:[]}}, config || {}))\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAFA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AAFA;AAZA;AACA;AADA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AACA;AArBA;AAoBA;AACA;AArBA;AAAA;AAAA;AAAA;AACA;AAqBA;AACA;AACA;AAFA;AACA;AAvBA;AAAA;AACA;AADA;AA4BA;AACA;AAAA;AACA;AADA;AAAA;AA7BA;AAAA;AACA;AADA;AAgCA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AA3CA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA2CA;AAAA;AAAA;AAAA;AACA;AA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA6CA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAMA;AANA;AAFA;AAWA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAMA;AANA;AAFA;AAZA;AAyBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AA/BA;AAmCA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAtCA;AAxDA;AACA;AAoGA;;;;;;;;;;;AClHA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}